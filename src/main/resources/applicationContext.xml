<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
">
    <!--ioc-->
    <context:component-scan base-package="bekyiu"/>
    <!--di-->
    <context:annotation-config/>
    <!--连接池-->
    <context:property-placeholder location="classpath:db.properties" system-properties-mode="NEVER"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
    </bean>
    <!--集成mybatis, 就是把让Spring来创建SqlSessionFactory对象, mapper对象-->
    <!--配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--1: 连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--2: 读取mybatis配置文件 (这个配置文件可以不要, 直接配在这里)-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--3: 配置别名扫描包-->
        <property name="typeAliasesPackage" value="bekyiu.domain"/>
        <!--4: 关联mapper文件-->
        <property name="mapperLocations" value="classpath:bekyiu/mapper/*Mapper.xml"/>
    </bean>
    <!--
        @Repository必须帖在实现类上才有用
        而现在只有Mapper接口, 它的实现类是动态代理生成的
        所以, 配置Mapper接口代理扫描器, 告诉Spring去哪一个包中寻找接口, 并为该接口创建代理对象
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="bekyiu.mapper"/>
    </bean>

    <!--配置事务-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* bekyiu.service.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
</beans>